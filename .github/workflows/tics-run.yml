name: TICS QA Analysis

on:
    schedule:
        - cron: '0 0 * * 1'  # Runs every Monday at midnight
    workflow_dispatch:

jobs:
    tics:
        name: TIOBE TICS Framework
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
            - uses: actions/setup-go@v6
              with:
                go-version-file: go.mod

            - name: Install dependencies
              run: |
                go install honnef.co/go/tools/cmd/staticcheck@latest

            - name: Fetch last successful QA run id
              env:
                GITHUB_TOKEN: ${{ github.token }}
              run: |
                set -eu
                echo "LAST_QA_ID=$(gh run list --workflow 'QA & sanity checks' --limit 1 --status success --json databaseId -b main | jq '.[].databaseId')" >> $GITHUB_ENV

            - name: Download coverage artifact
              uses: actions/download-artifact@v4
              with:
                github-token: ${{ github.token }}
                path: .artifacts/
                run-id: ${{ env.LAST_QA_ID }}

            - name: TICS Scan
              env:
                TICSAUTHTOKEN: ${{ secrets.TICSAUTHTOKEN }}
                GH_TOKEN: ${{ github.token }}
              run: |
                set -e

                # Move coverage to expected directory
                mkdir coverage
                mv .artifacts/coverage/Cobertura.xml coverage/coverage.xml

                # Install TICS
                . <(curl --silent --show-error 'https://canonical.tiobe.com/tiobeweb/TICS/api/public/v1/fapi/installtics/Script?cfg=GoProjects&platform=linux&url=https://canonical.tiobe.com/tiobeweb/TICS/')

                # TICS needs to build the artifacts in order to run the analysis.
                # Since it uses the GOTOOLCHAIN=local stanza, it's better if we prebuild it to make sure that the Go
                # toolchain setup by the action is properly updated to the one we defined in go.mod. Prebuilding also
                # helps to speed up the TICS analysis, as we would already have the build cache populated.
                go build -o authd-vanilla ./cmd/authd-oidc
                go build -tags=withmsentraid -o authd-msentraid ./cmd/authd-oidc
                go build -tags=withgoogle -o authd-google ./cmd/authd-oidc

                TICSQServer -project authd-oidc-brokers -tmpdir /tmp/tics -branchdir .

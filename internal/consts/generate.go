// TiCS: disabled // This is a helper file to generate the consts used based on which broker was built.

//go:build generate

package main

import (
	"html/template"
	"log"
	"os"
	"path/filepath"
	"runtime"

	"gopkg.in/ini.v1"
)

func main() {
	_, currentFilePath, _, ok := runtime.Caller(0)
	if !ok {
		log.Fatal("Could not get current source file path")
	}
	currentDir := filepath.Dir(currentFilePath)

	addr, objectPath := getDbusInfo(filepath.Join(currentDir, "../../conf/authd.conf"))

	generateAuthdConst(filepath.Join(currentDir, "authd.go"), addr, objectPath)
}

func getDbusInfo(path string) (addr string, objectPath string) {
	f, err := ini.Load(path)
	if err != nil {
		log.Fatalf("Error opening ini file: %v", err)
	}

	authdSection := f.Section("authd")
	addrEntry, err := authdSection.GetKey("dbus_name")
	if err != nil {
		log.Fatalf("Can't read dbus_name found in ini file: %v", err)
	}
	objectPathEntry, err := authdSection.GetKey("dbus_object")
	if err != nil {
		log.Fatalf("Can't read dbus_object found in ini file: %v", err)
	}

	return addrEntry.String(), objectPathEntry.String()
}

func generateAuthdConst(dest string, addr string, objectPath string) {
	tmp := dest + ".new"
	f, err := os.Create(tmp)
	if err != nil {
		log.Fatalf("Can't open const file to generate: %v", err)
	}
	defer f.Close()

	t, err := template.New("authdConst").Parse(
		`// Code generated by internal/consts/generate.go. DO NOT EDIT.

package consts

//go:generate go run generate.go
const (
	// DbusName owned by the broker for authd to contact us.
	DbusName = "{{.Addr}}"
	// DbusObject main object path for authd to contact us.
	DbusObject = "{{.ObjectPath}}"
)
`)
	if err != nil {
		log.Fatalf("Invalid template: %v", err)
	}

	if err := t.Execute(f, struct {
		Addr       string
		ObjectPath string
	}{addr, objectPath}); err != nil {
		log.Fatalf("Error executing template: %v", err)
	}
	f.Close()

	if err := os.Rename(tmp, dest); err != nil {
		log.Fatalf("Error renaming file: %v", err)
	}
}
